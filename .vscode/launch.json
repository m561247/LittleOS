{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) 啟動",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/build/source/boot/boot.elf",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceRoot}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "x86_64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:1234",
            "targetArchitecture": "x86",
            "stopAtConnect": true,
            // 启动gdb之前，做些准备：写映像文件、启动qemu
            "windows": {
                "preLaunchTask": "調適準備", // 仅在windows下可自动运行
            },
            "linux": {
                "preLaunchTask": "調適準備", // 仅在windows下可自动运行
                "miDebuggerPath": "gdb", // linux下的特殊配置
            },
            "customLaunchSetupCommands": [],
            "setupCommands": [
                {
                    "description": "為 gdb 啟用整齊打印",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "將反彙編風格設置為 Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                },
                // 設置體系結構: i8086，方便以16位方式進行反彙編
                // {
                //     "description": "設置體系結構",
                //     "text": "-gdb-set arch i8086",
                //     "ignoreFailures": true
                // }
            ],
            // gdb連接後的設置
            "postRemoteConnectCommands": [
                {
                    "description": "加載boot符號文件",
                    "text": "-file-symbol-file ./build/source/boot/boot.elf",
                    "ignoreFailures": false
                },
                {
                    "description": "加載內核符號文件",
                    "text": "add-symbol-file ./build/source/kernel/kernel.elf 0x10000",
                    "ignoreFailures": false
                },
                {
                    "description": "加載load符號文件",
                    "text": "add-symbol-file ./build/source/loader/loader.elf 0x8000",
                    "ignoreFailures": false
                },
                // {
                //     "description": "加載boot符號文件",
                //     "text": "add-symbol-file ./build/source/boot/boot.elf 0x7c00",
                //     "ignoreFailures": false
                // },
                {
                    "description": "加載init符號文件",
                    "text": "add-symbol-file ./build/source/init/init.elf 0x82000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加載shell符號文件",
                    "text": "add-symbol-file ./build/source/shell/shell.elf 0x81000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加載loop符號文件",
                    "text": "add-symbol-file ./build/source/loop/loop.elf 0x83000000",
                    "ignoreFailures": false
                },
                {
                    "description": "加載snake符號文件",
                    "text": "add-symbol-file ./build/source/snake/snake.elf 0x84000000",
                    "ignoreFailures": false
                },
                {
                    "description": "運行至0x7c00",
                    "text": "-exec-until *0x7c00",
                    "ignoreFailures": false
                },
            ],
        }
    ]
}